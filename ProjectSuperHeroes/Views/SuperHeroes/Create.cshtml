@model ProjectSuperHeroes.Models.SuperHeroes.SuperheroViewModel

@{
    ViewBag.Title = "Create";
    Layout = "_Layout";
}

<div class="form-container">
    <h2>Create Superhero</h2>
    <form asp-action="Create" method="post">
        <div class="form-group">
            <label asp-for="SuperheroName"></label>
            <input asp-for="SuperheroName" />
        </div>
        <div class="form-group">
            <label asp-for="FullName"></label>
            <input asp-for="FullName" />
        </div>
        <div class="form-group">
            <label asp-for="WeightKg"></label>
            <input asp-for="WeightKg" />
        </div>
        <div class="form-group">
            <label asp-for="HeightCm"></label>
            <input asp-for="HeightCm" />
        </div>
        <div class="form-group">
            <label asp-for="GenderId">Gender</label>
            <select asp-for="GenderId" asp-items="Model.Genders.Select(g => new SelectListItem { Value = g.Id.ToString(), Text = g.Gender1 })">
                <option value="">-- Select gender--</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="EyeColourId">EyeColour</label>
            <select asp-for="EyeColourId" asp-items="Model.EyeColours.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.Colour1 })">
                <option value="">-- Choose your eye color--</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="HairColourId">HairColour</label>
            <select asp-for="HairColourId" asp-items="Model.HairColours.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.Colour1 })">
                <option value="">-- Choose your hair color --</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="SkinColourId">SkinColour</label>
            <select asp-for="SkinColourId" asp-items="Model.SkinColours.Select(c => new SelectListItem { Value = c.Id.ToString(), Text = c.Colour1 })">
                <option value="">-- Choose your skin color --</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="RaceId">Race</label>
            <select asp-for="RaceId" asp-items="Model.Races.Select(r => new SelectListItem { Value = r.Id.ToString(), Text = r.Race1 })">
                <option value="">-- Select a race --</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="PublisherId">Publisher</label>
            <select asp-for="PublisherId" asp-items="Model.Publishers.Select(p => new SelectListItem { Value = p.Id.ToString(), Text = p.PublisherName })">
                <option value="">--Select a publisher --</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="AlignmentId">Alignment</label>
            <select asp-for="AlignmentId" asp-items="Model.Alignments.Select(a => new SelectListItem { Value = a.Id.ToString(), Text = a.Alignment1 })">
                <option value="">-- Select alignment --</option>
            </select>
        </div>
        <div class="form-group checkbox-group">
            <label><h3>Choose superpowers:</h3></label>
            <div class="checkbox-grid">
                @foreach (var power in Model.Superpowers)
                {
                    <div class="checkbox-item">
                        <input type="checkbox" name="SelectedPowerIds" value="@power.Id" /> @power.PowerName
                    </div>
                }
            </div>
        </div>
        <div asp-validation-summary="All" class="text-danger"></div>
        <button type="submit" class="btn btn-primary" id="add">Create</button>
    </form>
</div>
<style>
    .form-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    .form-group input, .form-group select {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .form-group input[type="checkbox"] {
        width: auto;
        margin-right: 10px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .text-danger {
        color: red;
    }

    .checkbox-group {
        margin-bottom: 15px;
    }

    .checkbox-group label {
        font-weight: normal;
    }

    .checkbox-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 10px;
    }

    .checkbox-item {
        display: flex;
        align-items: center;
    }

    #add {
        margin-bottom: 60px;
        margin-top: 30px;
    }

    @@media (max-width: 600px) {
        .checkbox-grid {
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        }
    }
</style>